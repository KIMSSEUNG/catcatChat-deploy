name: Deploy to EC2

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    concurrency:
      group: deploy-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: ✅ 현재 리포 clone (deploy.sh용)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.sha }}

      - name: ✅ 외부 ChatPRJ_BE 레포 clone
        uses: actions/checkout@v4
        with:
          repository: KIMSSEUNG/ChatPRJ_BE
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          path: app
          ref: main
          fetch-depth: 0

      - name: 🛠️ JDK 설정
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: 📦 Gradle 빌드 (+ SHA 태깅)
        run: |
          cd app
          chmod +x ./gradlew
          ./gradlew clean bootJar
          # 외부 레포의 커밋 SHA (7자리)
          BE_SHA=$(git rev-parse --short=7 HEAD)
          echo "BE_SHA=$BE_SHA" >> $GITHUB_ENV
          # 산출물 파일명에 SHA 붙이기
          mv build/libs/catcatChat.jar build/libs/catcatChat-${BE_SHA}.jar

      - name: 🔍 빌드 결과 및 파일 점검
        run: |
          echo "[📂 libs 디렉토리 내 파일 목록]"
          ls -al app/build/libs
          echo "[🔎 JAR 파일 존재 확인]"
          test -f "app/build/libs/catcatChat-${BE_SHA}.jar"
          echo "✅ JAR 파일 있음: app/build/libs/catcatChat-${BE_SHA}.jar"
          du -sh "app/build/libs/catcatChat-${BE_SHA}.jar"

          echo "[📄 deploy.sh 존재 확인]"
          test -f ./deploy.sh && ls -al ./deploy.sh

      - name: 📌 JAR 경로 추출
        id: extract
        run: |
          echo "jar_path=app/build/libs/catcatChat-${BE_SHA}.jar" >> $GITHUB_OUTPUT

      - name: 🚀 EC2에 배포 (JAR + deploy.sh)
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: ${{ steps.extract.outputs.jar_path }},deploy.sh
          target: "/home/ubuntu/catcatChat"
          overwrite: true
          strip_components: 0

      - name: 🔁 EC2에서 실행 (deploy.sh 실행, SHA 전달)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            chmod +x /home/ubuntu/catcatChat/deploy.sh
            /home/ubuntu/catcatChat/deploy.sh ${BE_SHA}
